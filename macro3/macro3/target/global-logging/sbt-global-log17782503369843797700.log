[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Arianna\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Arianna\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 17.0.9)
[debug]       Load.loadUnit: plugins took 162.2577ms
[debug]       Load.loadUnit: defsScala took 0.4079ms
[debug] [Loading] Scanning directory C:\Users\Arianna\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Arianna\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 35.9878 ms
[debug]           Load.resolveProject(global-plugins) took 49.3676ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Arianna\.sbt\1.0\plugins, plugins: List(<none>))) took 118.0955ms
[debug] [Loading] Done in C:\Users\Arianna\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 162.5593ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.56ms
[debug]     Load.loadUnit(file:/C:/Users/Arianna/.sbt/1.0/plugins/, ...) took 339.4507ms
[debug]   Load.apply: load took 632.5768ms
[debug]   Load.apply: resolveProjects took 9.5315ms
[debug]   Load.apply: finalTransforms took 89.6081ms
[debug]   Load.apply: config.delegates took 16.7483ms
[debug]   Load.apply: Def.make(settings)... took 659.2328ms
[debug]   Load.apply: structureIndex took 189.2466ms
[debug]   Load.apply: mkStreams took 4.9833ms
[info] loading global plugins from C:\Users\Arianna\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3557.5397ms
[debug]           Load.loadUnit: plugins took 41.7936ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\Arianna\Documents\Magistrale\PPS\macros\macro3\project
[debug]             Load.loadUnit: mkEval took 9.7882ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Arianna\Documents\Magistrale\PPS\macros\macro3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2224 ms
[info] loading settings for project macro3-build from idea.sbt ...
[debug]               Load.resolveProject(macro3-build) took 16.028ms
[debug]             Load.loadTransitive: finalizeProject(Project(id macro3-build, base: C:\Users\Arianna\Documents\Magistrale\PPS\macros\macro3\project, plugins: List(<none>))) took 20.0795ms
[debug] [Loading] Done in C:\Users\Arianna\Documents\Magistrale\PPS\macros\macro3\project, returning: (macro3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3408.6214ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.2249ms
[debug]         Load.loadUnit(file:/C:/Users/Arianna/Documents/Magistrale/PPS/macros/macro3/project/, ...) took 3466.56ms
[debug]       Load.apply: load took 3469.2801ms
[debug]       Load.apply: resolveProjects took 0.1916ms
[debug]       Load.apply: finalTransforms took 24.0338ms
[debug]       Load.apply: config.delegates took 0.7054ms
[debug]       Load.apply: Def.make(settings)... took 95.2491ms
[debug]       Load.apply: structureIndex took 34.5434ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Users\Arianna\Documents\Magistrale\PPS\macros\macro3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5275.2778ms
[debug]     Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory C:\Users\Arianna\Documents\Magistrale\PPS\macros\macro3
[debug]       Load.loadUnit: mkEval took 0.5229ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1988 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 57.9201ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Arianna\Documents\Magistrale\PPS\macros\macro3, plugins: List(<none>))) took 62.8456ms
[debug] [Loading] Done in C:\Users\Arianna\Documents\Magistrale\PPS\macros\macro3, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1589.3564ms
[debug]     Load.loadUnit: cleanEvalClasses took 27.956ms
[debug]   Load.loadUnit(file:/C:/Users/Arianna/Documents/Magistrale/PPS/macros/macro3/, ...) took 6893.8072ms
[debug] Load.apply: load took 6896.2362ms
[debug] Load.apply: resolveProjects took 0.0779ms
[debug] Load.apply: finalTransforms took 43.4766ms
[debug] Load.apply: config.delegates took 0.2449ms
[debug] Load.apply: Def.make(settings)... took 71.7597ms
[debug] Load.apply: structureIndex took 24.7364ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to macro3 (in build file:/C:/Users/Arianna/Documents/Magistrale/PPS/macros/macro3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58799 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58799, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to macro3 (in build file:/C:/Users/Arianna/Documents/Magistrale/PPS/macros/macro3/)
[debug] > Exec(idea-shell, None, None)
